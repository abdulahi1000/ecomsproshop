{"version":3,"sources":["constants/productConstants.js","constants/cartConstant.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userAction.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productAction.js","components/ProductCerousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UsersListScreen.js","screens/UserUpdateScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADD","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DELIVERED_FAIL","ORDER_DELIVERED_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReview","productTopRated","cart","cartItems","shippingAddress","item","existitem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","console","log","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","createProduct","post","ProductCerousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","loadingProductReview","errorProductReview","successProductReview","qty","setQty","comment","setComment","setRating","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","roundedCircle","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrder","errorOrder","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","rounded","createOrder","OrderScreen","orderId","sdkReady","SetSdkReady","loadingPay","successPay","loadingDelivered","successDelivered","window","paypal","script","document","createElement","async","onload","body","appendChild","addPaypalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UsersListScreen","successDelete","deleteHandler","confirm","delete","deleteUsers","bordered","hover","UserUpdateScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUsers","s","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.183752ab.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADD = 'CART_SAVE_SHIPPING_ADD'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n\r\n\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVERED_REQUEST = 'ORDER_DELIVERED_REQUEST'\r\nexport const ORDER_DELIVERED_SUCCESS = 'ORDER_DELIVERED_SUCCESS'\r\nexport const ORDER_DELIVERED_FAIL = 'ORDER_DELIVERED_FAIL'\r\nexport const ORDER_DELIVERED_RESET = 'ORDER_DELIVERED_RESET'","import {createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk  from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productListDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewReducer,\r\n    productTopRatedReducer,\r\n\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails: productListDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReview: productReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    \r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    \r\n})\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\nJSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo : userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n\r\n\r\n\r\n","import { \r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n } from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = {products:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products:[]}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productListDetailsReducer = (state = {product:{reviews:[]}}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading:false, product:action.payload}\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading:false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading:false, success:true}\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading:false, error:action.payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading: true, ...state}\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading:false, success:true, product:action.payload}\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case PRODUCT_CREATE_RESET:\r\n            return {\r\n                \r\n            }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product:{}}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading:false, success:true, product:action.payload}\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case PRODUCT_UPDATE_RESET:\r\n            return {\r\n                product:{}\r\n            }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productReviewReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return {loading: true}\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading:false, success:true}\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products:[]}, action) =>{\r\n    switch(action.type){\r\n        case PRODUCT_TOP_REQUEST:\r\n            return {loading: true, products:[]}\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading:false, products:action.payload}\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADD,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n\r\n\r\n} from '../constants/cartConstant'\r\n\r\n\r\n export const cartReducer = (state={cartItems:[], shippingAddress:{}}, action) =>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existitem = state.cartItems.find(x => x.product === item.product)\r\n\r\n             if (existitem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existitem.product ? item : x)\r\n                }\r\n\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n            case CART_REMOVE_ITEM:\r\n                return{\r\n                    ...state,\r\n                    cartItems : state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n            \r\n            case CART_SAVE_SHIPPING_ADD:\r\n                return {\r\n                    ...state,\r\n                    shippingAddress : action.payload\r\n            }\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                    \r\n            }\r\n        \r\n            case CART_CLEAR_ITEMS:\r\n                return {\r\n                    ...state,\r\n                    cartItems: []                    \r\n                }\r\n                \r\n\r\n        default:\r\n            return state\r\n    }   \r\n }","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        \r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        \r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_LOGOUT:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n                \r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        \r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_LOGOUT:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    \r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n                \r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        \r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n\r\n            return{ user:{}}\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    \r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n                \r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        \r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userListReducer = (state = {users:[] }, action) => {\r\n    \r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n                \r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        \r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        case USER_LIST_RESET:\r\n            return {\r\n                users:[]\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    \r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n                \r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        \r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user:{}}, action) => {\r\n    \r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n                \r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        \r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user:{}\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL,\r\n    ORDER_DELIVERED_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        \r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading:true, orderItems:[], shippingAddress:{}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        \r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            } \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success:true\r\n            }\r\n        \r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVERED_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_DELIVERED_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success:true\r\n            }\r\n        \r\n        case ORDER_DELIVERED_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVERED_RESET:\r\n            return {}\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders:action.payload\r\n            }\r\n        \r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders:[]\r\n            }\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        \r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders:action.payload\r\n            }\r\n        \r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}","import axios from 'axios'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_SUCCESS,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_SUCCESS,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET, \r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    \r\n    USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const login = ( email, password ) => async ( dispatch ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: ORDER_LIST_MY_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n}\r\n\r\nexport const register = ( name, email, password ) => async ( dispatch ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name ,'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = ( id) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n        console.log(userInfo)\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            \r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        \r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = ( user ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data \r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n       localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = ( ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data \r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUsers = (id ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data \r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DELETE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUsers = (user) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'>\r\n  \r\n            </Form.Control>\r\n            <Button\r\n                    type='submit'\r\n                    variant='outline-success'\r\n                    className='p-2'\r\n                >\r\n                    Submit\r\n                </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userAction'\r\nimport SearchBox from './SearchBox'\r\n\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                <Navbar.Brand>ProShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        {<SearchBox/>}\r\n                    <Nav className=\"ml-auto\">\r\n                    <LinkContainer to='/cart'>\r\n                    <Nav.Link ><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            \r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                    <Nav.Link ><i className='fas fa-user'></i> Login</Nav.Link>\r\n                   </LinkContainer>\r\n                            )\r\n                                \r\n                            }\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin'id='username'>\r\n                                <LinkContainer to='/admin/userList'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productList'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    \r\n                                    <LinkContainer to='/admin/orderList'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                   \r\n                                </NavDropdown>\r\n                            )}\r\n                            \r\n                    \r\n                    </Nav>\r\n                   \r\n                    \r\n                </Navbar.Collapse>\r\n                 </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3 staybottom'>Copyright &copy; Proshop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 1 ? 'fas fa-star'\r\n                    : value >= 0.5 ? 'fas fa-star-half-alt'\r\n                    :'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 2 ? 'fas fa-star'\r\n                    : value >= 1.5 ? 'fas fa-star-half-alt'\r\n                    :'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 3 ? 'fas fa-star'\r\n                    : value >= 2.5 ? 'fas fa-star-half-alt'\r\n                    :'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 4 ? 'fas fa-star'\r\n                    : value >= 3.5 ? 'fas fa-star-half-alt'\r\n                    :'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{color}} className={\r\n                    value >= 5 ? 'fas fa-star'\r\n                    : value >= 4.5 ? 'fas fa-star-half-alt'\r\n                    :'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport Rating from './Rating'\r\n\r\nfunction Product( {product}) {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n           <Link to={`product/${product._id}`}>\r\n               <Card.Img src={product.image}/>\r\n           </Link>\r\n           <Card.Body>\r\n                <Link to={`product/${product._id}`}>\r\n                    <Card.Title as='div'> \r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link> \r\n\r\n                <Card.Text as='div'>\r\n                    <div className='my-3'>\r\n                        <Rating value={product.rating} text={`${product.numReviews} Reviews`} color={'#f8e825'}/>\r\n\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n             \r\n           </Card.Body>\r\n\r\n           \r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n        animation = 'border'\r\n        role='status'\r\n            style={{\r\n                height:'100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n            >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n      \r\n        \r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {pages > 1 && (\r\n                <Pagination>\r\n                    {[...Array(pages).keys()].map((x) => (\r\n                        <LinkContainer\r\n                            key={x + 1}\r\n                            to={!isAdmin ?\r\n                                `/?keyword=${keyword}&page=${x + 1}`\r\n                            : `/admin/productList/?keyword=${keyword}&page=${x + 1}`}\r\n                        >\r\n                            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                        </LinkContainer>\r\n                    ))}\r\n                </Pagination>\r\n            )}\r\n          \r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS, \r\n } from '../constants/productConstants'\r\n\r\n export const listProducts = (keyword='') => async (dispatch) =>{\r\n\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${keyword}`)\r\n\r\n        dispatch({type:PRODUCT_LIST_SUCCESS, payload:data})\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n\r\n }\r\n\r\n  export const listProductDetails = (id) => async (dispatch) =>{\r\n\r\n    try{\r\n        dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({type:PRODUCT_DETAILS_SUCCESS, payload:data})\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n \r\nexport const deleteProduct = ( id) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_DELETE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\nexport const createProduct = ( ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = ( product) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_UPDATE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = ( productId, review) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload:data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n export const listTopProducts = () => async (dispatch) =>{\r\n\r\n    try{\r\n        dispatch({type:PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({type:PRODUCT_TOP_SUCCESS, payload:data})\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type:PRODUCT_TOP_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n\r\n }\r\n\r\n ","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productAction'\r\n\r\nfunction ProductCerousel() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n    \r\n    useEffect(() => {\r\n       dispatch(listTopProducts()) \r\n    }, [dispatch])\r\n    return (\r\n        loading ? <Loader />\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Carousel pause='hover' className='bg-dark'>\r\n                        {products.map(product => (\r\n                            <Carousel.Item key={product._id}>\r\n                                <Link to={`/product/${product._id}`}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                    <Carousel.Caption className='carousal.caption'>\r\n                                        <h4>{product.name} (${product.price})</h4>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                )\r\n    )\r\n}\r\n\r\nexport default ProductCerousel\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Row, Col } from 'react-bootstrap'\r\n// import products from '../product'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCerousel  from '../components/ProductCerousel'\r\nimport {listProducts} from '../actions/productAction'\r\n\r\n\r\n\r\nfunction HomeScreen({history}) {\r\n    // const [products, setProducts] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n    \r\n    let keyword = history.location.search\r\n    useEffect(()=>{\r\n        dispatch(listProducts(keyword))\r\n  \r\n        // async function fetchProducts(){\r\n        //     const { data } = await axios.get('/api/products/')\r\n        //     setProducts(data)\r\n        // }\r\n        // fetchProducts()\r\n        \r\n    }, [dispatch, keyword])\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCerousel/>}\r\n            \r\n            <h1>Lastest Product</h1>\r\n            {loading ? <Loader/>\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n            :\r\n            <div>\r\n            <Row>\r\n                {products.map(product =>(\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Product product={product}/>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword}/>\r\n            </div>\r\n            \r\n            }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, Image, ListGroup, Card, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport {listProductDetails, createProductReview} from '../actions/productAction'\r\n// import products from '../product'\r\nimport axios from 'axios'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen( {match, history}) {\r\n    const dispatch = useDispatch()\r\n    \r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const productReview = useSelector(state => state.productReview)\r\n    const { loading: loadingProductReview, error: errorProductReview, success: successProductReview } = productReview\r\n    \r\n\r\n   const [qty, setQty] = useState(1)\r\n   const [comment, setComment] = useState('')\r\n   const [rating, setRating] = useState(0)\r\n    // const product = products.find((p) => p._id === match.params.id )\r\n    \r\n    // const [product, setproduct] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type:PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    //    async function fatchProducts(){\r\n    //     const {data} = await axios.get(`/api/products/${match.params.id}`)\r\n    //     setproduct(data)\r\n    //    }\r\n\r\n    //    fatchProducts()\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler= () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('click')\r\n        dispatch(createProductReview(\r\n            match.params.id,{\r\n            rating,\r\n            comment\r\n        }))\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n           <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n           {\r\n               loading ? <Loader/>\r\n               : error ? <Message variant='danger'>{error}</Message>\r\n               :(\r\n               <div>\r\n               <Row>\r\n               <Col md={6}>\r\n                   <Image src={product.image} alt={product.name} fluid/>\r\n               </Col>\r\n               <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} Reviews`} color={'#f8e825'}/>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Description: {product.description}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n               </Col>\r\n               <Col md={3}>\r\n                   <Card>\r\n                       <ListGroup variant='flush'>\r\n                           <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Price:</Col>\r\n                                   <Col><strong>${product.price}</strong></Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n                       \r\n                       <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Status:</Col>\r\n                                   <Col>{product.countInStock > 0? 'In Stock' : 'Out of Stock'}</Col>\r\n                               </Row>\r\n                           </ListGroup.Item>\r\n\r\n                           {product.countInStock > 0 && (\r\n                               <ListGroup.Item>\r\n                                   <Row>\r\n                                       <Col>Qty</Col>\r\n                                       <Col xs='auto' className='my-1'>\r\n                                            <Form.Control as='select' value={qty}\r\n                                            onChange = {(e) => setQty(e.target.value)}\r\n                                            >\r\n                                                {\r\n                                                    // to create an array from a number and mapping it\r\n                                                    [...Array(product.countInStock).keys()].map((x) =>\r\n                                                        <option key={x+1} value={x+1}>\r\n                                                            {x+1}\r\n                                                        </option>\r\n                                                    )\r\n                                                }\r\n                                            </Form.Control>\r\n                                       </Col>\r\n                                   </Row>\r\n\r\n                               </ListGroup.Item>\r\n                           )}\r\n\r\n                       <ListGroup.Item>\r\n                          \r\n                           <Button className='btn btn-block' disabled={product.countInStock=== 0} type='button'\r\n                            onClick={addToCartHandler}\r\n                           > Add to Cart</Button>\r\n                       </ListGroup.Item>\r\n                       </ListGroup>\r\n                   </Card>\r\n               </Col>\r\n           </Row>\r\n           \r\n                <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n\r\n                                        {product.reviews.length === 0 && <Message variant='info'>No Review</Message>}\r\n                                        \r\n                                        <ListGroup variant='flush'>\r\n                                            {product.reviews.map((review) => (\r\n                                                <ListGroup.Item key={review._id}>\r\n                                                    <strong>{review.name}</strong>\r\n                                                    <Rating value={review.rating} color='#f8e825' />\r\n                                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                    <p>{ review.comment}</p>\r\n\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                            <ListGroup.Item>\r\n                                                <h4>rewite a review</h4>\r\n                                                {loadingProductReview && <Loader />}\r\n                                                {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                                {errorProductReview && <Message variant='success'>{errorProductReview}</Message>}\r\n                                                \r\n                                                {userInfo ? (\r\n                                                    <Form onSubmit={submitHandler}>\r\n                                                        <Form.Group controlId='rating'>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}\r\n                                                            >\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Poor</option>\r\n                                                                <option value='2'>2 - Fair</option>\r\n                                                                <option value='3'>3 - Good</option>\r\n                                                                <option value='4'>4 - very Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group controlId='comment'>\r\n                                                            <Form.Label>Review</Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='textarea'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Button\r\n                                                            disabled={loadingProductReview}\r\n                                                            type='submit'\r\n                                                            variant='primary'\r\n                                                        >submit</Button>\r\n                                                        \r\n\r\n                                                    </Form>\r\n                                                ) : (\r\n                                                        <Message variant='info'>please <Link to='/login'>login</Link> to write a review </Message>\r\n                                                        \r\n                                                )}\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    \r\n                                 </Col>\r\n               \r\n                </Row>\r\n           </div>)\r\n           }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADD,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstant'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState)=>{\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price:data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const removeFromCart = (id) =>(dispatch, getState) =>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) =>(dispatch) =>{\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADD,\r\n        payload:data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) =>(dispatch) =>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Card, ListGroup, Image, Form, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartAction';\r\n\r\nfunction CartScreen({match, location, history}) {\r\n\r\n    const productId = match.params.id\r\n    const qty = location.search ?Number(location.search.split('=')[1] ): 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n  \r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ?(\r\n                    <Message  variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ):(\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid roundedCircle/>\r\n                                    </Col> \r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                    <Form.Control as='select' value={item.qty}\r\n                                            onChange = {(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n                                                    // to create an array from a number and mapping it\r\n                                                    [...Array(item.countInStock).keys()].map((x) =>\r\n                                                        <option key={x+1} value={x+1}>\r\n                                                            {x+1}\r\n                                                        </option>\r\n                                                    )\r\n                                                }\r\n                                            </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button \r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={()=> removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n               <Card>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                           <h2>Subtotal({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                           ${cartItems.reduce((acc, item) => acc + item.qty*item.price , 0).toFixed(2)}\r\n                       </ListGroup.Item>\r\n\r\n                       <ListGroup.Item>\r\n                           <Button\r\n                           type='button'\r\n                           className='btn-block'\r\n                           disabled={cartItems.length === 0}\r\n                           onClick={checkoutHandler}\r\n                           >\r\n                               proceed to checkout\r\n                           </Button>\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs={12} md={6}>\r\n                        {children}\r\n                        \r\n                    </Col>\r\n\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userAction'\r\n\r\n\r\nfunction LoginScreen({ location, history }) {\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    console.log(redirect)\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    // to redirect user to where they are  before\r\n    useEffect( () => { \r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect] )\r\n\r\n    \r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n       \r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            \r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email..'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password..'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'> Sign In</Button>\r\n\r\n                \r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={ redirect ? `/register?redirect=${redirect}` : '/register'}>Register\r\n                    </Link></Col>\r\n            </Row>\r\n\r\n            \r\n        </FormContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userAction'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    console.log(redirect)\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    // to redirect user to where they are  before\r\n    useEffect( () => { \r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect] )\r\n\r\n    \r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            \r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name..'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email..'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password..'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Comfirm password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password..'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'> Sign Up</Button>\r\n\r\n\r\n            </Form>\r\n\r\n             <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={ redirect ? `/login?redirect=${redirect}` : '/login'}>Sign In\r\n                    </Link></Col>\r\n            </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Col, Row, Table} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderAction'\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n   \r\n\r\n    const userDetails= useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin= useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    //to get success message that's why we are getting this\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrder, error: errorOrder,  orders } = orderListMy\r\n    \r\n    \r\n\r\n    // to redirect user to where they are  before\r\n    useEffect(() => {\r\n     \r\n        \r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success ) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                \r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n                                \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n            \r\n        }\r\n    }, [dispatch, history, userInfo, user] )\r\n\r\n    \r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n            \r\n        }\r\n        \r\n        \r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                 {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            \r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name..'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email..'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>password</Form.Label>\r\n                    <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Enter Password..'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Comfirm password</Form.Label>\r\n                    <Form.Control\r\n                        \r\n                        type='password'\r\n                        placeholder='Confirm Password..'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'> Update</Button>\r\n\r\n\r\n            </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrder ? (\r\n                    <Loader/>\r\n                ) : errorOrder ? (\r\n                        <Message variant='danger'></Message>\r\n                ) :\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{ order._id }</td>\r\n                                        <td>{ order.createdAt.substring(0,10) }</td>\r\n                                        <td>{ order.totalPrice }</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                              <i className='fas fa-times' style={{color:'red'}}/>\r\n                                        ) }</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    \r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL,\r\n\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstant'\r\n\r\nexport const createOrder = ( order ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data \r\n        })\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data \r\n        })\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_CREATE_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = ( id ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data \r\n        })\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = ( id, paymentResult ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data \r\n        })\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_PAY_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = ( order ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVERED_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVERED_SUCCESS,\r\n            payload: data \r\n        })\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_DELIVERED_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = ( ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myOrders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data \r\n        })\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_LIST_MY_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = ( ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data \r\n        })\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ORDER_LIST_FAIL,\r\n            payload:error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer  } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    < LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                   </ LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled >Login</Nav.Link>\r\n                        \r\n                )}\r\n\r\n            </Nav.Item>\r\n\r\n         \r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    < LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                   </ LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled >Shipping</Nav.Link>\r\n                        \r\n                )}\r\n\r\n                </Nav.Item>\r\n                \r\n              \r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    < LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                   </ LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled >Payment</Nav.Link>\r\n                        \r\n                )}\r\n\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    < LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                   </ LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled >Place Order</Nav.Link>\r\n                        \r\n                )}\r\n\r\n            </Nav.Item>\r\n            \r\n            \r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartAction'\r\n\r\nfunction ShippingScreen({ history }) {\r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n\r\n        \r\n    }\r\n    return (\r\n        \r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address..'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City..'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country..'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postel Code </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code..'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\n\r\nfunction PaymentScreen({history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n  \r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    \r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='paypal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            \r\n                        \r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col, Row, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\nimport { createOrder } from '../actions/orderAction'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n    \r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order,success, error } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = ((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n            \r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n\r\n                        <p>\r\n                            <strong>Shipping: </strong>\r\n                            {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                            {' '}\r\n                            {cart.shippingAddress.postalCode},\r\n                            {' '}\r\n                            {cart.shippingAddress.country}\r\n                            </p>\r\n\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                            \r\n                            </p>\r\n                            \r\n                        </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ?\r\n                                <Message variant='info'>Your cart is empty</Message> :\r\n                                (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index ) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                        \r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{ item.name}</Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                        \r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                        )\r\n                                            \r\n                                        )}\r\n\r\n                                    </ListGroup>\r\n                                )}\r\n                            \r\n\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                        \r\n                        \r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport {Button, Col, Row, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderAction'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVERED_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, SetSdkReady] = useState(false)\r\n    \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n    \r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n    \r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDelivered, success: successDelivered } = orderDeliver\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    if (!loading && !error) {\r\n        \r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPaypalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AbHsWy08WKti91Ji__0V3Bpi5XuDR1EWLJjdjzcB13q8BBPZMptNNbo93HtxJt8roji_4Is0cV4zLGd7'\r\n        script.async = true\r\n        script.onload = () => {\r\n            SetSdkReady(true)\r\n            \r\n        }\r\n        document.body.appendChild(script)\r\n\r\n    }\r\n \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if (!order || successPay ||order._id !== Number(orderId) || successDelivered) {\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVERED_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n            \r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPaypalScript()\r\n            } else {\r\n                SetSdkReady(true)\r\n            }\r\n        }\r\n      \r\n    }, [dispatch, order, orderId, successPay, successDelivered])\r\n    \r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n            <Message variant='danger'>{error }</Message>\r\n    ):    (\r\n        \r\n                <div>\r\n                    <h1>Order: {order._id }</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> { order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}> { order.user.email}</a></p>\r\n                        <p>\r\n                            <strong>Shipping: </strong>\r\n                            {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                            {' '}\r\n                            {order.shippingAddress.postalCode},\r\n                            {' '}\r\n                            {order.shippingAddress.country}\r\n                                    </p>\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) :\r\n                                        (\r\n                                        <Message variant='warning'>Not Delivered</Message>\r\n\r\n                                            \r\n                        )}\r\n\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                            \r\n                                    </p>\r\n                                    \r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) :\r\n                                        (\r\n                                        <Message variant='warning'>Not Paid</Message>\r\n\r\n                                            \r\n                        )}\r\n                            \r\n                            \r\n                            \r\n                        </ListGroup.Item>\r\n\r\n                         <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ?\r\n                                <Message variant='info'>Your order is empty</Message> :\r\n                                (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index ) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                        \r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{ item.name}</Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                        \r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                        )\r\n                                            \r\n                                        )}\r\n\r\n                                    </ListGroup>\r\n                                )}\r\n                            \r\n\r\n                        \r\n                        </ListGroup.Item>\r\n\r\n                        \r\n                        \r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice} </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice} </Col>\r\n                                </Row>\r\n                                    </ListGroup.Item>\r\n                                    \r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n                                            \r\n                                            {!sdkReady ? (<Loader />)\r\n                                                : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                            )}\r\n                            \r\n                            {loadingDelivered && <Loader/>}\r\n                           {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                type='button'\r\n                                                className='btn btn-block'\r\n                                            onClick={deliverHandler}>\r\n                                                mark as deliver\r\n                                            </Button>\r\n                               </ListGroup.Item>\r\n                           )}\r\n                        </ListGroup>\r\n                        \r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUsers } from '../actions/userAction'\r\n\r\nfunction UsersListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin){\r\n        dispatch(listUsers())\r\n        \r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n        \r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => { \r\n        if (window.confirm('Are yiu sure you want ti delete this user?')) {\r\n            dispatch(deleteUsers(id))\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        \r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{ user._id}</td>\r\n                                        <td>{ user.name}</td>\r\n                                        <td>{ user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{color:'green'}}/>\r\n                                        ) :\r\n                                            <i className='fas fa-check' style={{color:'red'}}/>\r\n                                        \r\n                                        }</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit' />\r\n                                                    </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                    <i className='fas fa-trash' />\r\n                                                    </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            \r\n                        </Table>\r\n            )}\r\n            \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default UsersListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Col, Row, Table} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUsers } from '../actions/userAction'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserUpdateScreen({match, history}) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate} = userUpdate\r\n    \r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({\r\n                type: USER_UPDATE_RESET\r\n            })\r\n            history.push('/admin/userList/')\r\n        } else {\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n            \r\n        }\r\n\r\n\r\n        \r\n    }, [dispatch, user, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(updateUsers({_id:user._id, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link className='btn btn-primary' to='/admin/userList'>Go back</Link>\r\n\r\n            <FormContainer>\r\n        \r\n                <h2>Edit User</h2>\r\n               \r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            \r\n            {loadingUpdate && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name..'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email..'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='checkbox'\r\n                            label='Is Admin's\r\n                            id='isAdmin'\r\n                            checked={isAdmin}\r\n                            onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            \r\n                        \r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n               \r\n\r\n                <Button type='submit' variant='primary'> Update</Button>\r\n\r\n\r\n            </Form>\r\n            </FormContainer>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default UserUpdateScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productAction'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({history, match}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product:createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({type:PRODUCT_CREATE_RESET })\r\n        if (!userInfo.isAdmin){\r\n            history.push('/login')\r\n        \r\n        }\r\n        \r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createProduct._id}/edit`)\r\n              \r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n        \r\n        \r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createProduct, keyword])\r\n\r\n    const deleteHandler = (id) => { \r\n        if (window.confirm('Are you sure you want ti delete this product?')) {\r\n            console.log(id)\r\n            dispatch(deleteProduct(id))\r\n\r\n        }\r\n    }\r\n\r\n    const createProducthandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-item-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProducthandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            \r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            \r\n\r\n\r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n                                    <tr key={product._id}>\r\n                                        <td>{ product._id}</td>\r\n                                        <td>{ product.name}</td>\r\n                                        <td>${ product.price}</td>\r\n                                        <td>{ product.category}</td>\r\n                                        <td>{ product.brand}</td>\r\n                                        \r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit' />\r\n                                                    </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash' />\r\n                                                    </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            \r\n                            </Table>\r\n                            <Paginate page={page} pages={pages} isAdmin={ true} />\r\n                            </div> \r\n            )}\r\n            \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Col, Row, Table} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productAction'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({match, history}) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading:loadingUpdate, success:successUpdate } = productUpdate\r\n    \r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productList')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n            dispatch(listProductDetails(productId))\r\n\r\n        } else {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n        }\r\n            \r\n        }\r\n\r\n        \r\n    }, [dispatch,product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n            \r\n            setImage(data)\r\n            setUploading(false)\r\n            \r\n        }catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link className='btn btn-primary' to='/admin/productList'>Go back</Link>\r\n\r\n            <FormContainer>\r\n        \r\n                <h2>Edit Product</h2>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{ errorUpdate}</Message>}\r\n\r\n\r\n                {loading ? <Loader /> :\r\n                    error ? <Message variant='danger'>{error}</Message> :\r\n                        (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name </Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name..'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                    <Form.Group controlId='price'>\r\n                    <Form.Label>Price </Form.Label>\r\n                    <Form.Control\r\n                        \r\n                        type='number'\r\n                        placeholder='Enter Price..'\r\n                        value={price}\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                                </Form.Group>\r\n                                \r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>Image </Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Image..'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>  \r\n                                    <Form.File\r\n                                        id='image-file'\r\n                                        label='choose File'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}></Form.File>\r\n                                    {uploading && <Loader/>}\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='brand'>\r\n                        <Form.Label>Brand </Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Brand..'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>Stock </Form.Label>\r\n                        <Form.Control\r\n                            type='number'\r\n                            placeholder='Enter Count in Stock..'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='categoty'>\r\n                        <Form.Label>Category </Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Category..'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='Description'>\r\n                        <Form.Label>Description </Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter Description..'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n\r\n               \r\n\r\n                <Button type='submit' variant='primary'> Update</Button>\r\n\r\n\r\n            </Form>\r\n                            \r\n                    )}\r\n            \r\n            </FormContainer>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders} from '../actions/orderAction'\r\n\r\nfunction OrderListScreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin){\r\n        dispatch(listOrders())\r\n        \r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        \r\n        \r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading ? (<Loader />)\r\n                : error ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        \r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>Total</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{ order._id}</td>\r\n                                        <td>{ order.user  && order.user.name}</td>\r\n                                        <td>{ order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${ order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) :\r\n                                            <i className='fas fa-check' style={{color:'red'}}/>\r\n                                        \r\n                                        }</td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) :\r\n                                            <i className='fas fa-check' style={{color:'red'}}/>\r\n                                        \r\n                                        }</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                    </Button>\r\n                                            </LinkContainer>\r\n\r\n                                        \r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                            \r\n                        </Table>\r\n            )}\r\n            \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default OrderListScreen\r\n","import { Container } from 'react-bootstrap'\n// import {BrowserRouter as Router, Route} from 'react-router-dom'\n// to use a hashRouter instead of broweserRouter\nimport {HashRouter as Router, Route} from 'react-router-dom'\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UsersListScreen from './screens/UsersListScreen';\nimport UserUpdateScreen from './screens/UserUpdateScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      <main>\n        \n        <Container className='py-3'>\n          <Route path='/' component={HomeScreen} exact/>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen}/>\n          <Route path='/shipping' component={ShippingScreen}/>\n          <Route path='/payment' component={PaymentScreen}/>\n          <Route path='/placeorder' component={PlaceOrderScreen}/>\n          <Route path='/order/:id' component={OrderScreen}/>\n          <Route path='/product/:id' component={ProductScreen}/>\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userList' component={UsersListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserUpdateScreen} />\n\n\n          <Route path='/admin/productList' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderList' component={OrderListScreen} />\n\n\n        </Container>\n      </main>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}